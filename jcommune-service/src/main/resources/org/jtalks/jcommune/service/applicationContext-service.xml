<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011  JTalks.org Team
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.
    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.
    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <!-- Declaration AOP configs -->
    <aop:config>
        <aop:pointcut id="defaultTxPointcut"
                      expression="within(org.jtalks.jcommune.service.transactional..*)"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="defaultTxPointcut"/>
    </aop:config>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--Declaration services bean -->

    <bean id="avatarService"
          class="org.jtalks.jcommune.service.nontransactional.AvatarServiceImpl">
        <constructor-arg index="0" ref="imagePreprocessor"/>
    </bean>

    <bean id="imagePreprocessor"
          class="org.jtalks.jcommune.service.nontransactional.ImageUtils"/>
    <bean id="locationService" class="org.jtalks.jcommune.service.nontransactional.LocationServiceImpl"/>

    <bean id="userService"
          class="org.jtalks.jcommune.service.transactional.TransactionalUserService">
        <constructor-arg index="0" ref="userDao"/>
        <constructor-arg index="1" ref="securityService"/>
        <constructor-arg index="2" ref="mailService"/>
        <constructor-arg index="3" ref="imagePreprocessor"/>
    </bean>

    <bean id="postService"
          class="org.jtalks.jcommune.service.transactional.TransactionalPostService">
        <constructor-arg index="0" ref="postDao"/>
        <constructor-arg index="1" ref="topicDao"/>
        <constructor-arg index="2" ref="securityService"/>
    </bean>

    <bean id="topicBranchService"
          class="org.jtalks.jcommune.service.transactional.TransactionalBranchService">
        <constructor-arg index="0" ref="topicBranchDao"/>
        <constructor-arg index="1" ref="branchSectionDao"/>
    </bean>

    <bean id="branchSectionService"
          class="org.jtalks.jcommune.service.transactional.TransactionalSectionService">
        <constructor-arg index="0" ref="branchSectionDao"/>
    </bean>

    <bean id="pmService"
          class="org.jtalks.jcommune.service.transactional.TransactionalPrivateMessageService">
        <constructor-arg index="0" ref="privateMessageDao"/>
        <constructor-arg index="1" ref="securityService"/>
        <constructor-arg index="2" ref="userService"/>
        <constructor-arg index="3" ref="userDataCacheService"/>
    </bean>

    <bean id="topicService"
          class="org.jtalks.jcommune.service.transactional.TransactionalTopicService">
        <constructor-arg index="0" ref="topicDao"/>
        <constructor-arg index="1" ref="securityService"/>
        <constructor-arg index="2" ref="topicBranchService"/>
        <constructor-arg index="3" ref="topicBranchDao"/>
    </bean>

    <bean id="securityService"
          class="org.jtalks.jcommune.service.nontransactional.SecurityServiceImpl">
        <constructor-arg index="0" ref="userDao"/>
        <constructor-arg index="1" ref="securityContextFacade"/>
        <constructor-arg index="2" ref="aclManager"/>
    </bean>

    <bean id="forumStatisticsService"
          class="org.jtalks.jcommune.service.nontransactional.ForumStatisticsServiceImpl">
        <constructor-arg index="0" ref="forumStatisticsDAO"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!--todo:  make it configurable -->
        <property name="host" value="smtp.mail.ru"/>
        <property name="port" value="25"/>
        <property name="username" value="jtalks@inbox.ru"/>
        <property name="password" value="javatalks"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>

    <!-- this is a template message that we can pre-load with default state -->
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="jtalks@inbox.ru"/>
    </bean>

    <bean id="mailService"
          class="org.jtalks.jcommune.service.nontransactional.MailServiceImpl">
        <constructor-arg index="0" ref="mailSender"/>
        <constructor-arg index="1" ref="templateMessage"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/org/jtalks/jcommune/service/ehcache.xml"/>
    </bean>
    <!--
    Cache for user related data.
    Now used for storing new private messages count.
    -->
    <bean id="userDataCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="cuserDataCache"/>
    </bean>

    <bean id="userDataCacheService"
          class="org.jtalks.jcommune.service.nontransactional.UserDataCacheServiceImpl">
        <constructor-arg name="userDataCache" ref="userDataCache"/>
    </bean>

</beans>
