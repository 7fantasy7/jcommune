<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2011  JTalks.org Team
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.
    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.
    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     ">


    <bean id="exceptionTranslationInterceptor"
          class="org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"/>

    <!--Declaration of AOP Config -->
    <aop:config>
        <aop:advisor advice-ref="exceptionTranslationInterceptor"
                     pointcut="execution(* org.jtalks.common.model.dao.ChildRepository+.* (*))"/>
        <aop:advisor advice-ref="exceptionTranslationInterceptor"
                     pointcut="execution(* org.jtalks.jcommune.model.dao.ForumStatisticsDao.* (*))"/>
        <aop:advisor advice-ref="exceptionTranslationInterceptor"
                     pointcut="execution(* org.jtalks.jcommune.model.dao.ValidatorDao.* (*))"/>
    </aop:config>

    <!--Declaration of DAO beans -->
    <bean id="userDao"
          class="org.jtalks.jcommune.model.dao.hibernate.UserHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="groupDao"
          class="org.jtalks.common.model.dao.hibernate.GroupHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="topicDao"
          class="org.jtalks.jcommune.model.dao.hibernate.TopicHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="postDao"
          class="org.jtalks.jcommune.model.dao.hibernate.PostHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="topicBranchDao" class="org.jtalks.jcommune.model.dao.hibernate.BranchHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="privateMessageDao" class="org.jtalks.jcommune.model.dao.hibernate.PrivateMessageHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="branchSectionDao" class="org.jtalks.jcommune.model.dao.hibernate.SectionHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="lastReadPostHibernateDao" class="org.jtalks.jcommune.model.dao.hibernate.LastReadPostHibernateDao"
          parent="abstractHibernateDao"/>
    <bean id="forumStatisticsDAO" class="org.jtalks.jcommune.model.dao.hibernate.ForumStatisticsHibernateDao">
        <constructor-arg index="0" ref="sessionFactory"/>
    </bean>
    <bean id="validatorDAO" class="org.jtalks.jcommune.model.dao.hibernate.ValidatorHibernateDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="userContactsDao"
          class="org.jtalks.jcommune.model.dao.hibernate.UserContactsHibernateDao"
          parent="abstractHibernateDao"/>
    
    <bean id="simplePageDao"
          class="org.jtalks.jcommune.model.dao.hibernate.SimplePageHibernateDao"
          parent="abstractHibernateDao"/>

    <bean id="pollDao"
          class="org.jtalks.jcommune.model.dao.hibernate.PollHibernateDao"
          parent="abstractHibernateDao"/>

    <bean id="pollOptionDao"
          class="org.jtalks.jcommune.model.dao.hibernate.PollOptionHibernateDao"
          parent="abstractHibernateDao"/>
          
    <bean id="propertyDao"
          class="org.jtalks.jcommune.model.dao.hibernate.PropertyHibernateDao"
          parent="abstractHibernateDao"/>

    <bean id="componentDao"
          class="org.jtalks.jcommune.model.dao.hibernate.ComponentHibernateDao"
          parent="abstractHibernateDao"/>

    <bean id="viewTopicsBranchesDao"
          class="org.jtalks.jcommune.model.dao.hibernate.ViewTopicsBranchesHibernateDao"
          parent="abstractHibernateDao"/>

    <!-- Declaration of Hibernate Search DAO beans -->
    <bean id="topicSearchDao" class="org.jtalks.jcommune.model.dao.search.hibernate.TopicHibernateSearchDao">
        <constructor-arg name="sessionFactory" ref="sessionFactory"/>
        <constructor-arg name="filters">
            <list>
                <ref bean="invalidCharactersFilter"/>
                <ref bean="stopWordsFilter"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="invalidCharactersFilter"
          class="org.jtalks.jcommune.model.search.InvalidCharactersFilter"/>
    <bean id="stopWordsFilter" class="org.jtalks.jcommune.model.search.StopWordsFilter">
        <constructor-arg>
            <list>
                <value>org/jtalks/jcommune/lucene/english_stop.txt</value>
                <value>org/jtalks/jcommune/lucene/russian_stop.txt</value>
            </list>
        </constructor-arg>
        <constructor-arg value="true"/>
    </bean>
    <!--Injecting sessionFactory bean to class AbstractHibernateChildRepository, this way
  resolves a problem of multiple DAO beans definition -->
    <bean id="abstractHibernateDao" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--Declaration and setting up datasource, sessionFactory and transactionalManager
   beans -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username:root}"/>
        <property name="password" value="${jdbc.password:root}"/>
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
          depends-on="flyway_jcommune">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>/org/jtalks/jcommune/model/entity/JCUser.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Group.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Post.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Topic.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Branch.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/PrivateMessage.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Section.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/UserContact.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/UserContactType.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/LastReadPost.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Poll.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/PollOption.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Property.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/SimplePage.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/Component.hbm.xml</value>
                <value>/org/jtalks/jcommune/model/entity/ViewTopicsBranches.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.query.factory_class">
                    org.hibernate.hql.ast.ASTQueryTranslatorFactory
                </prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.connection.charset">${encoding}</prop>
                <prop key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
                <prop key="hibernate.cache.region.factory_class">
                    net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
                </prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.use_query_cache}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">
                    /org/jtalks/jcommune/model/entity/ehcache.xml
                </prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.search.default.directory_provider">
                    ${hibernate.search.default.directory_provider}
                </prop>
                <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:/org/jtalks/jcommune/model/datasource.properties"/>
    </bean>

    <!-- Migrations, todo: 4 beans - that's weird, Ticket has been left for common to move init to one method -->

    <bean id="flyway_common_init" class="org.jtalks.common.util.FlywayWrapper" init-method="smartInit">
        <property name="dataSource" ref="dataSource"/>
        <property name="table" value="common_schema_version"/>
        <property name="enabled" value="${migrations_enabled}"/>
    </bean>
    <bean id="flyway_common" class="org.jtalks.common.util.FlywayWrapper" init-method="migrate"
          depends-on="flyway_common_init">
        <property name="dataSource" ref="dataSource"/>
        <property name="basePackage" value="org.jtalks.common.migrations"/>
        <property name="baseDir" value="/org/jtalks/common/migrations"/>
        <property name="table" value="common_schema_version"/>
        <property name="enabled" value="${migrations_enabled}"/>
    </bean>
    <bean id="flyway_jcommune_init" class="org.jtalks.common.util.FlywayWrapper" init-method="smartInit"
          depends-on="flyway_common">
        <property name="dataSource" ref="dataSource"/>
        <property name="table" value="jcommune_schema_version"/>
        <property name="enabled" value="${migrations_enabled}"/>
    </bean>
    <bean id="flyway_jcommune" class="org.jtalks.common.util.FlywayWrapper" init-method="migrate"
          depends-on="flyway_jcommune_init">
        <property name="dataSource" ref="dataSource"/>
        <property name="basePackage" value="org.jtalks.jcommune.migrations"/>
        <property name="baseDir" value="/org/jtalks/jcommune/migrations"/>
        <property name="table" value="jcommune_schema_version"/>
        <property name="enabled" value="${migrations_enabled}"/>
    </bean>

</beans>
